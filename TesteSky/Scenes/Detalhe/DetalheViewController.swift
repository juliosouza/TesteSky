//
//  DetalheViewController.swift
//  TesteSky
//
//  Created by Julio Cezar de Souza on 24/06/20.
//  Copyright (c) 2020 Julio Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetalheDisplayLogic: class {
}

class DetalheViewController: UIViewController, DetalheDisplayLogic {
    
    // MARK - VariÃ¡veis
    
    var interactor: DetalheBusinessLogic?
    var router: (NSObjectProtocol & DetalheRoutingLogic & DetalheDataPassing)?
    
    // MARK - Outlets
    
    @IBOutlet weak var titleMovieDetalhe: UILabel!
    @IBOutlet weak var yearMovieDetalhe: UILabel!
    @IBOutlet weak var durationMovieDetalhe: UILabel!
    @IBOutlet weak var overviewMovieDetalhe: UILabel!
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = DetalheInteractor()
        let presenter = DetalhePresenter()
        let router = DetalheRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    var detalhe: ListaFilmes.Filme?
    @IBOutlet weak var collectionView: UICollectionView!
    @IBOutlet weak var pageControl: UIPageControl!
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        pageControl.numberOfPages = detalhe?.backdrops_url.count ?? 0
        atualizarTela()
    }
    
    func atualizarTela() {
        titleMovieDetalhe.text = detalhe?.title
        yearMovieDetalhe.text = detalhe?.release_year
        durationMovieDetalhe.text = detalhe?.duration
        overviewMovieDetalhe.text = detalhe?.overview
    }
    
}

extension DetalheViewController:  UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: view.frame.width, height: 200)
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return detalhe?.backdrops_url.count ?? 0
    }
    
    
    func scrollViewWillEndDragging(_ scrollView: UIScrollView, withVelocity velocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>) {
        
        let pageWidth = Float(view.frame.width)
        let targetXContentOffset = Float(targetContentOffset.pointee.x)
        let contentWidth = Float(collectionView!.contentSize.width  )
        var newPage = Float(self.pageControl.currentPage)
        
        if velocity.x == 0 {
            newPage = floor( (targetXContentOffset - Float(pageWidth) / 2) / Float(pageWidth)) + 1.0
        } else {
            newPage = Float(velocity.x > 0 ? self.pageControl.currentPage + 1 : self.pageControl.currentPage - 1)
            if newPage < 0 {
                newPage = 0
            }
            if (newPage > contentWidth / pageWidth) {
                newPage = ceil(contentWidth / pageWidth) - 1.0
            }
        }
        
        self.pageControl.currentPage = Int(newPage)
        let point = CGPoint (x: CGFloat(newPage * pageWidth), y: targetContentOffset.pointee.y)
        targetContentOffset.pointee = point
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cellIdDetalhe", for: indexPath) as! MovieDetalheCollectionViewCell
        
        cell.imageMovieDetalhe.contentMode = .scaleAspectFill
        cell.imageMovieDetalhe.download(from: detalhe?.backdrops_url[indexPath.row] ?? "")
        
        return cell
    }
    
}
