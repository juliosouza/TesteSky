//
//  ListaFilmesViewController.swift
//  TesteSky
//
//  Created by Julio Cezar de Souza on 22/06/20.
//  Copyright (c) 2020 Julio Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListaFilmesDisplayLogic: class {
    func exibirListaFilmes(response: ListaFilmes.Response)
}

class ListaFilmesViewController: UIViewController, ListaFilmesDisplayLogic {
    
    
    var interactor: ListaFilmesBusinessLogic?
    var router: (NSObjectProtocol & ListaFilmesRoutingLogic & ListaFilmesDataPassing)?
    
    var list: [ListaFilmes.Filme] = []
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ListaFilmesInteractor()
        let presenter = ListaFilmesPresenter()
        let router = ListaFilmesRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
        carregaListaInicialFilmes()
        
        
    }
    
    // MARK: Methods
    
    func carregaListaInicialFilmes() {
        print("passou carregaListaInicial na VC")
        interactor?.carregarListaInicialFilmes()
    }
    
    func exibirListaFilmes(response: ListaFilmes.Response) {
        print("chegou aqui no final")
        list = response
    }
    
    
}

extension ListaFilmesViewController: UICollectionViewDataSource, UICollectionViewDelegate {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return list.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cellId", for: indexPath) as! MovieCollectionViewCell
        
        cell.labelMovie.text = list[indexPath.row].title
        
        
//        let collection = list[indexPath.row]
        
        return cell
    }
    
    
    
    
}
